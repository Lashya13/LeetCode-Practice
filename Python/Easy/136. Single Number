Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.

You must implement a solution with a linear runtime complexity and use only constant extra space.
Example 1:

Input: nums = [2,2,1]
Output: 1
Example 2:

Input: nums = [4,1,2,1,2]
Output: 4
Example 3:

Input: nums = [1]
Output: 1

solution:

class Solution:
    def singleNumber(self, nums: List[int]) -> int:
        #nums= [4,1,2,1,2]
        cnt ={}
        for val in nums:
            if val not in cnt:
                cnt[val]=1 
            else:
                cnt[val]+=1
        for key, values in cnt.items():
            if values ==1:
                 return key
        
